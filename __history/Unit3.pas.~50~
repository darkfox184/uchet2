unit Unit3;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Imaging.jpeg, Vcl.ExtCtrls,
  Vcl.Menus;

type
  Tmain = class(TForm)
    Image1: TImage;
    MainMenu1: TMainMenu;
    Af1: TMenuItem;
    N1: TMenuItem;
    N2: TMenuItem;
    N3: TMenuItem;
    N5: TMenuItem;
    N6: TMenuItem;
    N7: TMenuItem;
    N8: TMenuItem;
    N9: TMenuItem;
    N11: TMenuItem;
    N12: TMenuItem;
    N16: TMenuItem;
    N17: TMenuItem;
    N18: TMenuItem;
    N19: TMenuItem;
    N10: TMenuItem;
    N13: TMenuItem;
    N14: TMenuItem;
    N15: TMenuItem;
    N20: TMenuItem;
    N4: TMenuItem;
    N21: TMenuItem;
    N22: TMenuItem;
    N23: TMenuItem;
    ile1: TMenuItem;
    ArrangeIcons1: TMenuItem;
    N24: TMenuItem;
    N25: TMenuItem;
    N26: TMenuItem;
    procedure N6Click(Sender: TObject);
    procedure N12Click(Sender: TObject);
    procedure N9Click(Sender: TObject);
    procedure N19Click(Sender: TObject);
    procedure N15Click(Sender: TObject);
    procedure N16Click(Sender: TObject);
    procedure N13Click(Sender: TObject);
    procedure N8Click(Sender: TObject);
    procedure N20Click(Sender: TObject);
    procedure N11Click(Sender: TObject);
    procedure N18Click(Sender: TObject);
    procedure N17Click(Sender: TObject);
    procedure N4Click(Sender: TObject);
    procedure N7Click(Sender: TObject);
    procedure N21Click(Sender: TObject);
    procedure N23Click(Sender: TObject);
    procedure ile1Click(Sender: TObject);
    procedure ArrangeIcons1Click(Sender: TObject);
    procedure N24Click(Sender: TObject);
    procedure N25Click(Sender: TObject);
    procedure N26Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  main: Tmain;

implementation

{$R *.dfm}

uses prodagi, rsklad, kursval, rzakaz, Unit2, Unit17, client, addnakls, rpostav,
  poiskzakaza, ABOUT, adduslgu, partzakaz, poiskotgrugen;

procedure Tmain.ArrangeIcons1Click(Sender: TObject);
begin
ArrangeIcons;
end;

procedure Tmain.ile1Click(Sender: TObject);
begin
Tile;
end;

procedure Tmain.N11Click(Sender: TObject);
begin
if (not Assigned(zakazpoisk)) then zakazpoisk:=Tzakazpoisk.Create(Self);
zakazpoisk.show;
end;

procedure Tmain.N12Click(Sender: TObject);
begin
if (not Assigned(prtovar)) then   // проверка существования Формы (если нет, то
prtovar:=Tprtovar.Create(Self);    // создание Формы)
prtovar.show;
end;

procedure Tmain.N13Click(Sender: TObject);
begin
if (not Assigned(clients)) then
clients:=Tclients.Create(Self);
clients.show;
end;

procedure Tmain.N15Click(Sender: TObject);
var count:integer;
gark:string;
begin
DataModule2.shet_FDQuery.SQL.Clear;
DataModule2.shet_FDQuery.SQL.Add ('SELECT number  FROM garant ORDER BY id DESC, id LIMIT 1 ');
DataModule2.shet_FDQuery.open;
count:=DataModule2.shet_FDQuery.Fields[0].AsInteger;
inc(count);
gark:=IntToStr(count);
if count<1000 then begin gark:='000'+gark;
end;
if count<10000 then begin  gark:='00'+gark;
end
else begin
if count<100000 then gark:='0'+gark;
end;
gark:='ММДН-'+gark;
DataModule2.shet_FDQuery.SQL.Clear;
DataModule2.shet_FDQuery.SQL.Add ('INSERT INTO garant (gark, number) VALUES (:gark, :number)  ');
DataModule2.shet_FDQuery.ParamByName('gark').Value:=gark;
DataModule2.shet_FDQuery.ParamByName('number').Value:=count;
DataModule2.shet_FDQuery.ExecSQL;
DataModule2.shet2_FDQuery.Active:=true;
DataModule2.shet2_FDQuery.Refresh;
ShowMessage( 'Накладная '+gark+'! Успешно создана!'  );
end;


procedure Tmain.N16Click(Sender: TObject);
begin
if (not Assigned(dusluga)) then
dusluga:=Tdusluga.Create(Self);
dusluga.show;
end;

procedure Tmain.N17Click(Sender: TObject);
begin
if (not Assigned(adduslg)) then
adduslg:=Tadduslg.Create(Self);
adduslg.show;
end;

procedure Tmain.N18Click(Sender: TObject);
begin
if (not Assigned(AboutBox)) then
AboutBox:=TAboutBox.Create(Self);
AboutBox.show;
end;

procedure Tmain.N19Click(Sender: TObject);
begin
if (not Assigned(options)) then
options:=Toptions.Create(Self);
options.show;
end;

procedure Tmain.N20Click(Sender: TObject);
begin
if (not Assigned(postav)) then
postav:=Tpostav.Create(Self);
postav.show;
end;

procedure Tmain.N21Click(Sender: TObject);
begin
if (not Assigned(otgrpoisk)) then
otgrpoisk:=Totgrpoisk.Create(Self);
otgrpoisk.show;
end;

procedure Tmain.N23Click(Sender: TObject);
begin
 Cascade;
end;

procedure Tmain.N24Click(Sender: TObject);
begin
close;
end;

procedure Tmain.N25Click(Sender: TObject);
begin
next;
end;

procedure Tmain.N26Click(Sender: TObject);
begin
Previous;
end;

procedure Tmain.N4Click(Sender: TObject);
begin
if (not Assigned(zakazpart)) then
zakazpart:=Tzakazpart.Create(Self);
zakazpart.show;
end;

procedure Tmain.N6Click(Sender: TObject);
var i: integer;
begin
for i:= 0 to MdiChildCount - 1 do
  MDIChildren[i].Close;
end;

procedure Tmain.N7Click(Sender: TObject);

begin
if (not Assigned(zakaz)) then

zakaz:=Tzakaz.Create(Owner);
zakaz.show;
end;

procedure Tmain.N8Click(Sender: TObject);
begin
if (not Assigned(addnakl)) then
addnakl:=Taddnakl.Create(Self);
addnakl.show;
end;

procedure Tmain.N9Click(Sender: TObject);
begin
if (not Assigned(sklad)) then
sklad:=Tsklad.Create(Self);
sklad.show;
end;

end.
